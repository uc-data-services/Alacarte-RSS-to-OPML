#!/usr/bin/env python 

from xml.etree.ElementTree import Element, SubElement, Comment, tostring, ElementTree
from xml.etree import ElementTree
from xml.dom import minidom
import datetime
import urllib2
import re 
import string
import os

generated_on = str(datetime.datetime.now())

# Configure one attribute with set()
root = Element('opml')
root.set('version', '1.0')

root.append(Comment('Generated by Tim Dennis'))

head = SubElement(root, 'head')
title = SubElement(head, 'title')
title.text = 'UC Berekeley Guides'
dc = SubElement(head, 'dateCreated')
if os.path.isfile('ucb-guides-feeds.opml'): #seeing if file exists
    with open('ucb-guides-feeds.opml', 'rt') as f:
        tree = ElementTree.parse(f)
    dc.text = str(tree.find('.//dateCreated').text).strip() #finding creation date if file exists
else:
    dc.text = generated_on
dm = SubElement(head, 'dateModified')
dm.text = generated_on

body = SubElement(root, 'body')

def write_xml(elem):
    """Write out a pretty print xml doc to file.
    """
    rough_string = ElementTree.tostring(elem, 'utf-8')
    reparsed = minidom.parseString(rough_string)
    with open('ucb-guides-feeds.opml', mode='w') as a_file:
        a_file.write(reparsed.toprettyxml(indent=" "))
       
feed_base_url = 'http://lib.berkeley.edu/alacarte/srg/feed/'
guide_base_url = 'http://lib.berkeley.edu/alacarte/'
guide_part = ['subject-guides', 'course-guides']
for part in guide_part:
    current_group = string.capwords(part.replace('-', ' '))
    response = urllib2.urlopen(guide_base_url+part)
    html = response.read()
    subject_urls = set(re.findall('alacarte/\w*-guide/(.*?)".*?>(.*?)</a>', html))
    current_group = SubElement(body, 'outline', {'text':current_group})
    for url, title in subject_urls:
        if re.search("\s\s+", title):
            title = re.sub("\s\s+", " ", title)
        feed = SubElement(current_group, 'outline',
                                 {'text': title,
                                  'xmlUrl':feed_base_url+url,
                                  'htmlUrl':guide_base_url+url,
                                  })
          
write_xml(root)